server {
    listen 80;
    server_name _;  # Default server block
    
    # Root directory and index file
    root /usr/share/nginx/html;
    index index.html;
    
    # Proxy all /api requests to the backend with HTTPS
    location /api/ {
        # Ensure HTTPS for backend
        proxy_pass https://construction-map-backend-ypzdt6srya-uc.a.run.app/api/;
        proxy_http_version 1.1;
        proxy_set_header Host construction-map-backend-ypzdt6srya-uc.a.run.app;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
    
    # Handle React routing (SPA)
    location / {
        try_files $uri $uri/ /index.html;
        
        # CORS headers - only allow HTTPS backend
        add_header 'Access-Control-Allow-Origin' 'https://construction-map-backend-ypzdt6srya-uc.a.run.app' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Add Content Security Policy to force HTTPS - keeping this for security
        # Commenting out CSP to allow both HTTP and HTTPS connections
        # add_header Content-Security-Policy "default-src https:; connect-src https:; font-src https: data:; img-src https: data:; script-src https: 'unsafe-inline' 'unsafe-eval'; style-src https: 'unsafe-inline';" always;
        
        # Force HTTPS for all API requests - more aggressive replacement
        sub_filter "http://construction-map-backend-ypzdt6srya-uc.a.run.app" "https://construction-map-backend-ypzdt6srya-uc.a.run.app";
        sub_filter "http://construction-map-backend" "https://construction-map-backend";
        sub_filter_once off;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://construction-map-backend-ypzdt6srya-uc.a.run.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Cache control for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
} 